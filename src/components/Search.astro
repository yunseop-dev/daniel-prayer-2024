---
interface Props {
	endpoint?: string
	apiKey?: string
}

const {
	endpoint = await import.meta.env.ORAMA_API_ENDPOINT,
	apiKey = await import.meta.env.ORAMA_API_KEY
} = Astro.props
---

<link
	rel='stylesheet'
	href='https://cdn.jsdelivr.net/npm/@orama/wc-components@latest/dist/orama-ui/orama-ui.css'
/>
<script
	type='module'
	src='https://cdn.jsdelivr.net/npm/@orama/wc-components@latest/dist/orama-ui/orama-ui.esm.js'
></script>
<script
	nomodule
	src='https://cdn.jsdelivr.net/npm/@orama/wc-components@latest/dist/cjs/orama-ui.cjs.js'></script>

<div id='orama-ui'>
	<orama-search-button>검색...</orama-search-button>
	<orama-search-box></orama-search-box>
</div>

<script define:vars={{ endpoint, apiKey }}>
	let open = false
	const searchBoxConfig = {
		resultsMap: {
			path: 'path',
			title: 'title',
			description: 'description'
		},
		colorScheme: 'system',
		themeConfig: {}
	}

	Object.assign(document.querySelector('orama-search-box'), {
		...searchBoxConfig,
		open: open,
		index: {
			endpoint: endpoint,
			api_key: apiKey
		}
	})

	document.querySelector('orama-search-button').addEventListener('click', () => {
		open = !open
		document.querySelector('orama-search-box').open = open
	})
</script>
